{"version":3,"sources":["components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","App.js","index.js"],"names":["ExpenseForm","props","useState","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","className","type","value","onChange","target","min","step","max","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","id","Math","random","toString","onAddExpense","Card","classes","children","ExpensesFilter","selected","onChangeFilter","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","ExpensesList","items","length","map","expense","ChartBar","barFillHeight","maxValue","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","filteredYear","setFilteredYear","filteredExpenses","filter","selectedYear","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5e23b501.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = (props) => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // const [userInput, setUserInput] = useState({\r\n    //   enteredTitle: '',\r\n    //   enteredAmount: '',\r\n    //   enteredDate: '',\r\n    // });\r\n\r\n    const titleChangeHandler = (event) => {\r\n        setEnteredTitle(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredTitle: event.target.value,\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //   return { ...prevState, enteredTitle: event.target.value };\r\n        // });\r\n    };\r\n\r\n    const amountChangeHandler = (event) => {\r\n        setEnteredAmount(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredAmount: event.target.value,\r\n        // });\r\n    };\r\n\r\n    const dateChangeHandler = (event) => {\r\n        setEnteredDate(event.target.value);\r\n        // setUserInput({\r\n        //   ...userInput,\r\n        //   enteredDate: event.target.value,\r\n        // });\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: +enteredAmount, // enforces a number conversion, if not it will add as strings\r\n            date: new Date(enteredDate),\r\n        };\r\n\r\n        props.onSaveExpenseData(expenseData);\r\n        setEnteredTitle('');\r\n        setEnteredAmount('');\r\n        setEnteredDate('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className='new-expense__controls'>\r\n                <div className='new-expense__control'>\r\n                    <label>Title</label>\r\n                    <input\r\n                        type='text'\r\n                        value={enteredTitle}\r\n                        onChange={titleChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Amount</label>\r\n                    <input\r\n                        type='number'\r\n                        min='0.01'\r\n                        step='0.01'\r\n                        value={enteredAmount}\r\n                        onChange={amountChangeHandler}\r\n                    />\r\n                </div>\r\n                <div className='new-expense__control'>\r\n                    <label>Date</label>\r\n                    <input\r\n                        type='date'\r\n                        min='2019-01-01'\r\n                        max='2022-12-31'\r\n                        value={enteredDate}\r\n                        onChange={dateChangeHandler}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className='new-expense__actions'>\r\n                <button type ='button' onClick={props.onCancel}>Cancel</button>\r\n                <button type='submit'>Add Expense</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default ExpenseForm;","import React, {useState} from 'react';\r\n\r\nimport ExpenseForm from './ExpenseForm';\r\nimport './NewExpense.css';\r\n\r\nconst NewExpense = (props) => {\r\n        const [isEditing, setIsEditing] = useState(false);\r\n\r\n        const saveExpenseDataHandler = (enteredExpenseData) => {\r\n            const expenseData = {\r\n                ...enteredExpenseData,\r\n                id: Math.random().toString()\r\n            };\r\n            props.onAddExpense(expenseData);\r\n            setIsEditing(false);\r\n        };\r\n\r\n        function startEditingHandler() {\r\n            setIsEditing(true);\r\n        }\r\n\r\n        function stopEditingHandler() {\r\n            setIsEditing(false);\r\n        }\r\n\r\n        return (\r\n            <div className='new-expense'>\r\n                {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\r\n                {isEditing && (\r\n                    <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n;\r\n\r\nexport default NewExpense;","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n    const classes = 'card ' + props.className;\r\n\r\n    return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n\r\nconst ExpensesFilter = (props) => {\r\n    const dropdownChangeHandler = (event) => {\r\n        props.onChangeFilter(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className='expenses-filter'>\r\n            <div className='expenses-filter__control'>\r\n                <label>Filter by year</label>\r\n                <select value={props.selected} onChange={dropdownChangeHandler}>\r\n                    <option value='2022'>2022</option>\r\n                    <option value='2021'>2021</option>\r\n                    <option value='2020'>2020</option>\r\n                    <option value='2019'>2019</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpensesFilter;","import React from 'react';\r\n\r\nimport './ExpenseDate.css';\r\n\r\nconst ExpenseDate = (props) => {\r\n    const month = props.date.toLocaleString('en-US', { month: 'long' });\r\n    const day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n        <div className='expense-date'>\r\n            <div className='expense-date__month'>{month}</div>\r\n            <div className='expense-date__year'>{year}</div>\r\n            <div className='expense-date__day'>{day}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExpenseDate;","import React from 'react';\r\n\r\nimport ExpenseDate from './ExpenseDate';\r\nimport Card from '../UI/Card';\r\nimport './ExpenseItem.css';\r\n\r\nconst ExpenseItem = (props) => {\r\n    return (\r\n        <Card className='expense-item'>\r\n            <ExpenseDate date={props.date} />\r\n            <div className='expense-item__description'>\r\n                <h2>{props.title}</h2>\r\n                <div className='expense-item__price'>${props.amount}</div>\r\n            </div>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ExpenseItem;","import React from 'react';\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css'\r\n\r\nfunction ExpensesList(props) {\r\n    if (props.items.length === 0) {\r\n        return <h2 className='expenses-list__fallback'>Found no expenses.</h2>;\r\n    }\r\n\r\n    return (\r\n        <li className=\"expenses-list\">\r\n            {props.items.map((expense) => (\r\n                <ExpenseItem\r\n                    key={expense.id}\r\n                    title={expense.title}\r\n                    amount={expense.amount}\r\n                    date={expense.date}\r\n                />\r\n            ))}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ExpensesList;","import React from 'react';\r\nimport './ChartBar.css'\r\n\r\nfunction ChartBar(props) {\r\n    let barFillHeight = '0%';\r\n\r\n    if (props.maxValue > 0) {\r\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n    }\r\n    return <div className=\"chart-bar\">\r\n        <div className=\"chart-bar__inner\">\r\n            <div className=\"chart-bar__fill\" style={{height: barFillHeight}}>\r\n            </div>\r\n        </div>\r\n        <div className=\"chart-bar__label\">\r\n            {props.label}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default ChartBar;","import React from 'react';\r\nimport ChartBar from \"./ChartBar\";\r\nimport './Chart.css'\r\n\r\nfunction Chart(props) {\r\n    const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalMaximum = Math.max(...dataPointValues);\r\n\r\n    // render chartBars - create as many ChartBars as data points\r\n    return (\r\n        <div className=\"chart\">\r\n            {props.dataPoints.map(dataPoint =>\r\n                <ChartBar\r\n                    key={dataPoint.id}\r\n                    value={dataPoint.value}\r\n                    maxValue={totalMaximum}\r\n                    label={dataPoint.label}\r\n                />)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nfunction ExpensesChart(props) {\r\n    const chartDataPoints = [\r\n        {label: 'Jan', value: 0},\r\n        {label: 'Feb', value: 0},\r\n        {label: 'Mar', value: 0},\r\n        {label: 'Apr', value: 0},\r\n        {label: 'May', value: 0},\r\n        {label: 'Jun', value: 0},\r\n        {label: 'Jul', value: 0},\r\n        {label: 'Aug', value: 0},\r\n        {label: 'Sep', value: 0},\r\n        {label: 'Oct', value: 0},\r\n        {label: 'Nov', value: 0},\r\n        {label: 'Dec', value: 0},\r\n    ];\r\n\r\n    for (const expense of props.expenses) { // use of for array, in for object\r\n        const expenseMonth = expense.date.getMonth(); // Jan is 0, Feb is 1 ...\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n\r\n    return <Chart dataPoints={chartDataPoints}/>;\r\n}\r\n\r\nexport default ExpensesChart;","import React, {useState} from 'react';\r\n\r\nimport Card from '../UI/Card';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport './Expenses.css';\r\n\r\nconst Expenses = (props) => {\r\n    const [filteredYear, setFilteredYear] = useState('2020');\r\n\r\n    const filterChangeHandler = (selectedYear) => {\r\n        setFilteredYear(selectedYear);\r\n    };\r\n\r\n    const filteredExpenses = props.items.filter(\r\n        expense => {\r\n            return expense.date.getFullYear().toString() === filteredYear;\r\n        }\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Card className='expenses'>\r\n                <ExpensesFilter\r\n                    selected={filteredYear}\r\n                    onChangeFilter={filterChangeHandler}\r\n                />\r\n                <ExpensesChart expenses={filteredExpenses}/>\r\n                <ExpensesList items={filteredExpenses}/>\r\n            </Card>\r\n        </div>\r\n    );\r\n\r\n}\r\nexport default Expenses;","import React, { useState } from 'react';\n\nimport NewExpense from './components/NewExpense/NewExpense';\nimport Expenses from './components/Expenses/Expenses';\n\nconst DUMMY_EXPENSES = [\n    {\n        id: 'e1',\n        title: 'Toilet Paper',\n        amount: 94.12,\n        date: new Date(2020, 7, 14),\n    },\n    { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n        id: 'e3',\n        title: 'Car Insurance',\n        amount: 294.67,\n        date: new Date(2021, 2, 28),\n    },\n    {\n        id: 'e4',\n        title: 'New Desk (Wooden)',\n        amount: 450,\n        date: new Date(2021, 5, 12),\n    },\n];\n\nconst App = () => {\n    const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n    const addExpenseHandler = (expense) => {\n        setExpenses((prevExpenses) => {\n            return [expense, ...prevExpenses];\n        });\n    };\n\n    // return React.createElement(\n    //   'div',\n    //   {},\n    //   React.createElement('h2', {}, \"Let's get started!\"),\n    //   React.createElement(Expenses, { items: expenses })\n    // );\n\n    return (\n        <div>\n            <NewExpense onAddExpense={addExpenseHandler} />\n            <Expenses items={expenses} />\n        </div>\n    );\n};\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}